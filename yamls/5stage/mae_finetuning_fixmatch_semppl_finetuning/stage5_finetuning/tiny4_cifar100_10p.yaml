vars:
  label_percentage: 0.1
  lr: 0.001
  weight_decay: 0.05
  beta2: 0.999
  layerwise_lr_decay: 0.75
  warmup_epochs: 5
  max_epochs: 100
  min_scale: 0.6
  randaug_num_ops: 1
  randaug_magnitude: 9
  randaug_magnitude_std: 0.5
  randaug_apply_op_p: 1
  label_smoothing: 0.1
  # mixup: 0.8
  # cutmix: 1.0
  # drop_path: 0
  continue_from_stage_id: w5xa9v8c
  continue_from_stage_name: 5stage_mae_finetuning_fixmatch_semppl_finetuning_stage4_semppl_1p

stage_name: cifar100_stage5_mae_finetuning_fixmatch_semppl_finetuning
datasets:
  train:
    kind: torchvision_dataset_wrapper
    dataset_identifier: cifar100
    num_classes: 100
    torchvision_args:
      kind: CIFAR100
      train: true
      download: false
    dataset_wrappers:
      - kind: classwise_subset_wrapper
        end_percent: ${vars.label_percentage}
    sample_wrappers:
      - kind: x_transform_wrapper
        transform:
          - kind: random_horizontal_flip
          - kind: kd_random_resized_crop
            size: 32
            scale:
              - ${vars.min_scale}
              - 1.0
            interpolation: bicubic
          - kind: kd_rand_augment
            num_ops: ${vars.randaug_num_ops}
            magnitude: ${vars.randaug_magnitude}
            magnitude_std: ${vars.randaug_magnitude_std}
            apply_op_p: ${vars.randaug_apply_op_p}
            interpolation: bicubic
            fill_color: [ 125, 123, 114 ]
          - kind: kd_cifar100_norm
      - kind: label_smoothing_wrapper
        smoothing: ${vars.label_smoothing}
    # collators:
    #   - kind: kd_mix_collator
    #     mixup_alpha: ${vars.mixup}
    #     cutmix_alpha: ${vars.cutmix}
    #     mixup_p: 0.5
    #     cutmix_p: 0.5
    #     apply_mode: batch
    #     lamb_mode: batch
    #     shuffle_mode: flip
  train_unaugmented:
    kind: torchvision_dataset_wrapper
    dataset_identifier: cifar100
    num_classes: 100
    torchvision_args:
      kind: CIFAR100
      train: true
      download: false
    x_transform:
      - kind: kd_cifar100_norm
  test:
    kind: torchvision_dataset_wrapper
    dataset_identifier: cifar100
    num_classes: 100
    torchvision_args:
      kind: CIFAR100
      train: false
      download: false
    x_transform:
      - kind: kd_cifar100_norm
  test_small:
    kind: torchvision_dataset_wrapper
    dataset_identifier: cifar100
    num_classes: 100
    torchvision_args:
      kind: CIFAR100
      train: false
      download: false
    x_transform:
      - kind: kd_cifar100_norm
model:
  kind: backbone_head
  backbone:
    kind: vit.vit_mae
    patch_size: 4
    embedding_dim: 192
    depth: 12
    attention_heads: 3
    # drop_path_rate: ${vars.drop_path}
    initializer:
      checkpoint: last
      kind: previous_run_initializer
      model_name: mae_contheads_vit.target_encoder
      stage_id: ${vars.continue_from_stage_id}
      stage_name: ${vars.continue_from_stage_name}
    optim:
      kind: adamw
      lr: ${vars.lr}
      weight_decay: ${vars.weight_decay}
      betas:
        - 0.9
        - ${vars.beta2}
      param_group_modifiers:
        - decay: ${vars.layerwise_lr_decay}
          kind: layerwise_lr_decay_modifier
      schedule:
        - end_checkpoint:
            epoch: ${vars.warmup_epochs}
          exclude_first: true
          exclude_last: true
          kind: linear_increasing
        - exclude_last: true
          kind: cosine_decreasing
  head:
    kind: heads.linear_head
    nonaffine_batchnorm: true
    pooling:
      kind: class_token
      # kind: mean_patch
    optim:
      kind: adamw
      lr: ${vars.lr}
      weight_decay: ${vars.weight_decay}
      betas:
        - 0.9
        - ${vars.beta2}
      schedule:
        - end_checkpoint:
            epoch: ${vars.warmup_epochs}
          exclude_first: true
          exclude_last: true
          kind: linear_increasing
        - exclude_last: true
          kind: cosine_decreasing
    initializer:
      kind: trunc_normal_initializer
      std: 0.01
trainer:
  kind: classification_trainer
  max_epochs: ${vars.max_epochs}
  effective_batch_size: 128
  precision: bfloat16
  log_every_n_epochs: 1
  loggers:
    - kind: accuracy_logger
      every_n_epochs: 1
      dataset_key: train
    - kind: accuracy_logger
      every_n_epochs: 1
      dataset_key: test
    - kind: loss_logger
      every_n_epochs: 1
      dataset_key: train
    - kind: loss_logger
      every_n_epochs: 1
      dataset_key: test
    - kind: checkpoint_logger
      save_latest_optim: false
      save_optim: false
      every_n_epochs: ${eval:${vars.max_epochs}+1}
    - kind: best_metric_logger
      every_n_epochs: 1
      pattern: accuracy1/train*
    - kind: best_metric_logger
      every_n_epochs: 1
      pattern: accuracy1/train*
      log_absolute_best: true
    - kind: best_metric_logger
      every_n_epochs: 1
      pattern: accuracy1/test*
    - kind: best_metric_logger
      every_n_epochs: 1
      pattern: accuracy1/test*
      log_absolute_best: true
    - kind: feature_umap_logger
      dataset_key: test_small
      every_n_epochs: ${vars.max_epochs}
      n_components: 2
      n_neighbors: 100
      min_dist: 0.2
      metric: 'euclidean'
      extractors:
        - kind: generic_extractor
          model_property_path: head.pooling
    - kind: knn_metrics_logger
      every_n_epochs: ${vars.max_epochs}
      train_dataset_key: train_unaugmented
      test_dataset_key: test
      extractors:
        - kind: generic_extractor
          model_property_path: head.pooling
      knns:
        - 1
        - 2
        - 3
        - 5
        - 8
        - 13
        - 21
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: knn_accuracy/knn01/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: nn_purity/knn01/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: knn_accuracy/knn02/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: nn_purity/knn02/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: knn_accuracy/knn03/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: nn_purity/knn03/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: knn_accuracy/knn05/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: nn_purity/knn05/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: knn_accuracy/knn08/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: nn_purity/knn08/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: knn_accuracy/knn13/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: nn_purity/knn13/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: knn_accuracy/knn21/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: nn_purity/knn21/
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: knn_accuracy/knn*
    - kind: best_metric_logger
      every_n_epochs: ${vars.max_epochs}
      pattern: nn_purity/knn*


summary_summarizers:
  - kind: best_metric_summary_summarizer
    pattern: accuracy1/train*/last
  - kind: best_metric_summary_summarizer
    pattern: accuracy1/train*/max
  - kind: best_metric_summary_summarizer
    pattern: accuracy1/test*/last
  - kind: best_metric_summary_summarizer
    pattern: accuracy1/test*/max
  - kind: best_metric_summary_summarizer
    pattern: knn_accuracy/knn*/GenericExtractor-batchnorm/train_unaugmented-test/max
  - kind: best_metric_summary_summarizer
    pattern: nn_purity/knn*/GenericExtractor-batchnorm/train_unaugmented-test/max
